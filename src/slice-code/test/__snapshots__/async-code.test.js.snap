// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`callPromise(false) && callPromise(true) 1`] = `
"export {callPromise}

function promise(pass) {
  return new Promise((resolve, reject) => {
    if (pass) {
      resolve('pass')
    } else {
      reject('!pass')
    }
  })
}

function callPromise(pass) {
  return promise(pass).catch(rejection => rejection)
}
"
`;

exports[`callPromise(false) 1`] = `
"export {callPromise}

function promise() {
  return new Promise((resolve, reject) => {
    reject('!pass')
  })
}

function callPromise(pass) {
  return promise(pass).catch(rejection => rejection)
}
"
`;

exports[`callPromise(true) 1`] = `
"export {callPromise}

function promise() {
  return new Promise(resolve => {
    resolve('pass')
  })
}

function callPromise(pass) {
  return promise(pass).catch()
}
"
`;

exports[`callback(false) && callback(true) 1`] = `
"export {callPromise, callback}

function promise(pass) {
  return new Promise((resolve, reject) => {
    if (pass) {
      resolve('pass')
    } else {
      reject('!pass')
    }
  })
}

function callback(pass, cb) {
  return callPromise(pass).then(cb, cb)
}

function callPromise(pass) {
  return promise(pass).catch(rejection => rejection)
}
"
`;

exports[`callback(false) 1`] = `
"export {callPromise, callback}

function promise() {
  return new Promise((resolve, reject) => {
    reject('!pass')
  })
}

function callback(pass, cb) {
  return callPromise(pass).then(cb, cb)
}

function callPromise(pass) {
  return promise(pass).catch(rejection => rejection)
}
"
`;

exports[`callback(true) 1`] = `
"export {callPromise, callback}

function promise() {
  return new Promise(resolve => {
    resolve('pass')
  })
}

function callback(pass, cb) {
  return callPromise(pass).then(cb, cb)
}

function callPromise(pass) {
  return promise(pass).catch()
}
"
`;
